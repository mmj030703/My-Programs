Problem Link : 
https://www.codingninjas.com/codestudio/guided-paths/basics-of-java/content/120294/offering/1403011?leftPanelTab=0

Description :
For a given input string(str), find and return the total number of words present in it.
It is assumed that two words will have only a single space in between. Also, there wouldn't be any leading and trailing spaces in the given input string.

Sample Input 1:
Coding Ninjas!
Sample Output 1:
2

Sample Input 2:
this is a sample string
Sample Output 2:
5

Constraints:
0 <= N <= 10^3
Where N is the length of the input string.
Time Limit: 1 sec

Source Code :
import java.util.* ;
import java.io.*; 
import java.util.Scanner;
class Solution {
	// Optimal Soln :: Count no of Space and at the end return count+1.
    // T.C => O(n)
    // S.C => O(1)
    static int  countWords(String input) {
        int spaceCount = 0;
        for(int i = 0; i < input.length(); i++) {
            if(Character.isSpace(input.charAt(i))) spaceCount++;
        }
        if(input.length() > 0)
            return ++spaceCount;
        else 
            return 0;
    }
    
	public static void main(String args[]) {
		Scanner sc = new Scanner(System.in);
        String input = sc.nextLine();
        int output = countWords(input);
        System.out.println(output);
		
	}
}
 
TOPIC TAGS :
STRINGS

