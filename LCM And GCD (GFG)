Problem Link :
https://practice.geeksforgeeks.org/problems/lcm-and-gcd4516/1

Given two numbers A and B. The task is to find out their LCM and GCD.

Example 1:
Input:
A = 5 , B = 10
Output:
10 5
Explanation:
LCM of 5 and 10 is 10, while
thier GCD is 5.
Example 1:

Input:
A = 14 , B = 8
Output:
56 2
Explanation:
LCM of 14 and 8 is 56, while
thier GCD is 2.
 
Your Task:
You don't need to read input or print anything. Your task is to complete the function lcmAndGcd() which takes an Integer N as input and returns a List of two Integers, the required LCM and GCD.

Expected Time Complexity: O(log(min(A, B))
Expected Auxiliary Space: O(1)

Constraints:
1 <= A,B <= 1018

Source Code :

//{ Driver Code Starts
#include <bits/stdc++.h>
using namespace std;

// } Driver Code Ends

/*
// TLE Soln
// T.C => O(min(A,B))
// S.C => (1)
class Solution {
  public:
    vector<long long> lcmAndGcd(long long A , long long B) {
        long long lcm = -1, gcd = -1;
        long long i = 1;
        long long ma = max(A,B);
        
        long long mi = min(A,B);
        for(int i = 1; i <= mi; i++) {
            if(A%i == 0 && B%i == 0) {
                gcd = i;
            }
        }
        
        lcm = (A*B) / gcd;
        return {lcm,gcd};
    }
};
*/

// Optimal Solution
// T.C => O(log(min(A,B)))
// S.C => O(1)
class Solution {
  public:
    vector<long long> lcmAndGcd(long long A , long long B) {
        long long lcm = 0, gcd = 0;
        long long a = A, b = B;
        while(A != B) {
            if(A == 0) {
                gcd = B;
                break;
            }
            if(B == 0) {
                gcd = A;
                break;
            }
            if(A > B) A -= B;
            if(B > A) B -= A;
        }
        gcd = A;
        lcm = (a*b) / gcd;
        return {lcm,gcd};
    }
};


//{ Driver Code Starts.
int main() {
    int t;
    cin >> t;
    while (t--) {
        long long A,B;
        
        cin>>A>>B;

        Solution ob;
        vector<long long> ans = ob.lcmAndGcd(A,B);
        cout<<ans[0]<<" "<<ans[1]<<endl;
    }
    return 0;
}
// } Driver Code Ends
