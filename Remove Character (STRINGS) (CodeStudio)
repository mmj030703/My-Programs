Problem Link : 
https://www.codingninjas.com/codestudio/guided-paths/basics-of-java/content/120294/offering/1403017?leftPanelTab=0

Description :
For a given string(str) and a character X, write a function to remove all the occurrences of X from the given string and return it.
The input string will remain unchanged if the given character(X) doesn't exist in the input string.

Sample Input 1:
aabccbaa
a
Sample Output 1:
bccb

Sample Input 2:
xxyyzxx
y
Sample Output 2:
xxzxx

Constraints:
0 <= N <= 10^6
Where N is the length of the input string.
Time Limit: 1 second


Source Code :
import java.util.* ;
import java.io.*; 
import java.util.Scanner;

class Solution {
    // BF Soln
    // T.C => O(N)
    // S.C => O(N) => O(N)
    static String removeAllOccurrencesOfChar(String input, char c) {
        char [] ch = new char[input.length()];
        int charInd = 0;
        int countC = 0;
        for(int i = 0; i < input.length(); i++) {
            if(input.charAt(i) != c) {
                ch[charInd++] = input.charAt(i);
            }
            else countC++;
        }
        input = new String(ch);
        return input.substring(0,input.length()-countC);
    }
    
    // Optimal Soln
    // T.C => O(N)
    // S.C => O(N)
    static String removeAllOccurrencesOfChar1(String input, char c) {
        String ans = "";
        for(int i = 0; i < input.length(); i++) {
            if(input.charAt(i) == c) continue;
            ans += input.charAt(i);
        }
        return ans; 
    }

    public static void main(String args[]) {
        Scanner sc = new Scanner(System.in);
        String input = sc.next();
        char c = sc.next().charAt(0);
        // String ans = removeAllOccurrencesOfChar(input, c);
        String ans = removeAllOccurrencesOfChar1(input, c);
        System.out.println(ans);
    }
}

TOPIC TAGS :
STRINGS 
