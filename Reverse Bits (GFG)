GFG Link : https://practice.geeksforgeeks.org/problems/reverse-bits3556/1
LeetCode Link : Similar Q'n => https://leetcode.com/problems/reverse-integer

Description :
Given a 32 bit number X, reverse its binary form and print the answer in decimal.

TestCase : 
Input:
X = 1
Output:
2147483648 
Explanation:
Binary of 1 in 32 bits representation-
00000000000000000000000000000001
Reversing the binary form we get, 
10000000000000000000000000000000,
whose decimal value is 2147483648.

Source Code :

//{ Driver Code Starts
#include <bits/stdc++.h>
using namespace std;
// } Driver Code Ends

/*
// Expected Soln : Not Optimal
// T.C => O(logX) another loop is using constant time as max iteration 
//                it will perform is 
// S.C => O(1)
class Solution {
  public:
    long long reversedBits(long long X) {
        long long ans = 0; 
        int bits = 0;
        while(X != 0) {
            int bit = X & 1;
            ans <<= 1;
            ans = ans | bit;
            ++bits;
            X >>= 1;
        }

        for(int i = 0; i < 32 - bits; i++) {
            ans <<= 1;
        }
        return ans;
    }
};
*/

// Optimal Soln
// T.C => O(1) as loop is running constant nuymber of time;
// S.C => O(1)
class Solution {
  public:
    long long reversedBits(long long X) {
        long long ans = 0;
        for(int i = 0; i < 32; i++) {
            int bit = X & 1;
            ans <<= 1;
            ans = ans | bit;
            X >>= 1;
        }
        return ans;
    }
};

//{ Driver Code Starts.
int main() {
    int t;
    cin >> t;
    while (t--) {
        long long X;
        
        cin>>X;

        Solution ob;
        cout << ob.reversedBits(X) << endl;
    }
    return 0;
}
// } Driver Code Ends
