Problem Link :
https://www.codingninjas.com/codestudio/guided-paths/basics-of-java/content/120294/offering/1403016?leftPanelTab=0

Description : 
You have been given a text message. You have to return the Run-length Encoding of the given message.
Run-length encoding is a fast and simple method of encoding strings. The basic idea is to represent repeated successive characters as the character and a single count. 
For example, the string "aaaabbbccdaa" would be encoded as "a4b3c2d1a2".

Note:
It's guaranteed that the message string will have no digits and consists solely of lowercase alphabetic characters.

Sample Input 1 :
3
aabbc
abcd
abbdcaas
Sample Output 1 :
a2b2c1
a1b1c1d1
a1b2d1c1a2s1
Explaination For Sample Input 1:
Test Case 1: As 2 consecutive 'a', 2 consecutive 'b', and 1 'c' are present in the given string so output is "a2b2c1".
Test Case 2: As 1 consecutive 'a', 1 consecutive 'b', 1 consecutive 'c' and 1 consecutive 'd' are present in the given string so output is "a1b1c1d1".
Test Case 3: As 1 consecutive 'a', 2 consecutive 'b', 1 consecutive 'd', 1consecutive 'c', 2 consecutive 'a' and 1 consecutive 's' are present in the given string 
so output is "a1b2d1c1a2s1".

Sample Input 2:
2
sadasd
adsad
Sample Output 2:
s1a1d1a1s1d1
a1d1s1a1d1

Constraints :
1 <= T <= 10
1 <= N <= 100000
Where 'N' is the length of the message string.
Time Limit: 1 sec

Source Code :
package com.practice;
import java.util.Scanner;
import java.lang.StringBuilder;

class Solution {
    // Optimal Soln
    // T.C => O(n)
    // S.C => O(n+n) => O(n)
    public String encode(String str) {
        StringBuilder sb = new StringBuilder();
        int count = 1;
        for(int i = 0; i < str.length()-1; i++) {
            if(str.charAt(i) == str.charAt(i+1)) count++;
            else {
                sb.append(str.charAt(i));
                sb.append(count);
                count = 1;
            }
        }
        if(Character.isLetter(str.charAt(str.length()-1))) {
            sb.append(str.charAt(str.length() - 1));
            sb.append(count);
        }
        return sb.toString();
    }
}

class practiceQuestion {
    public static void main(String [] args) {
        Scanner sc = new Scanner(System.in);
        String str = sc.nextLine();
        Solution s = new Solution();
        String ans = s.encode(str);
        System.out.println(ans);
    }
}

Topic Tags :
STRINGS

